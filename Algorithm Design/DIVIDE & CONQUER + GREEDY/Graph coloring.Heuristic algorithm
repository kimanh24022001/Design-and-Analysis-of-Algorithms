ĐÈ BÀI: Cho một đơn đồ thị vô hướng. Hãy tô màu cho đồ thị bằng PHƯƠNG PHÁP THAM LAM sao cho các đỉnh lân cận nhau không trùng
màu với nhau và số màu phải dùng là nhỏ nhất có thể. Màu được sử dụng là hệ màu RGB 24 bit với tối đa hơn 16 triệu màu,
các màu được đánh số từ 0 (màu đen #000000) đến 16777215 (màu trắng #FFFFFF).

 

INPUT:

Dòng đầu tiên chứa 02 số v, e, đây lần lượt là số đỉnh, số cạnh của đồ thị

Dòng tiếp theo chứa v chuỗi, mỗi chuỗi bao một hoặc nhiều ký tự hoa trong bảng chữ cái Tiếng Anh và cách nhau bởi khoảng trắng.
Đây là danh sách tên các đỉnh của đồ thị.

e dòng tiếp theo, mỗi dòng chứa 02 chuỗi u và i (cách nhau bởi khoảng trắng), thể hiện việc có một cạnh nối giữa đỉnh u và đỉnh i 
trong đồ thị.

 

OUTPUT:

Xuất ra trên một dòng dãy v số nguyên, tương ứng là màu cho các đỉnh. Số đầu tiên tương ứng là màu cho đỉnh đầu tiên trong danh sách 
chuỗi các đỉnh ở dòng thứ 2 của input.

#include <iostream>
#include <cstring>

using namespace std;
int choose_color( int s,int v,int color[1000], int a[1000][1000] ){
    for (int i=0;i<v;i++){
    	if (color[i]!=-1){
             int OK = true;
            for (int j=0;j<v;j++){
                if ( a [j][s]==1 && color[j]== color[i]  && s!=j ) {
                    OK = false; 
                    break;
                }
            }
                if (OK==true)   
                {
                //	cout<<s<<i<<a[1][0]<<color[i] ;
                   return color[i];
                }

       } 
    }
    int newColor=0;
    while (newColor<=16777215 ){
    	int flag=0;
    	for (int i=0;i<v;i++){
    		if (newColor==color[i]){
    			flag=1;
    		}
    	}
    	if (flag==0){
    		return newColor;
    		}
    	newColor++;
    }

}
int main() {
	int v,e,n,arr[1000][1000],color[1000];
	string  c[1000],a,b;
	cin>>v>>e;
	for (int i=0;i<v;i++){
		cin>>c[i];
	}
	for (int i=0;i<v;i++){
		for (int j=0;j<v;j++){
			arr[i][j]=0;
		}
	}
	for (int j=0;j<e;j++){
		int x,y;
		cin>>a>>b;
		for (int i=0;i<v;i++){
	     	if (c[i]==a){
		        x=i;
	     	}
	     	if (c[i]==b){
		        y=i;
	     	}
           	}
        arr[x][y]=1;
       // cout<<arr[x][y];
        arr[y][x]=1;
	}
	for (int i=0;i<v;i++){
		color[i]=-1;
	}
	for (int j=0;j<v;j++){
	//	cout<<c[j];
		color[j]=choose_color( j,v,color,arr );
			
		cout<<color[j]<<" ";
	}
   
	return 0;
}
